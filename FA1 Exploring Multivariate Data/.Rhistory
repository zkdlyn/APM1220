for(j in 1:8) {
mahalanobis_dist[i, j] <- mahalanobis(grades[i, ], grades[j, ], cov_grades)
}
}
mahalanobis_dist <- mahalanobis(grades, means_grades, cov_grades)
mahalanobis_dist
mahalanobis_dist <- matrix(0, 8, 8)
for(i in 1: 8) {
for(j in 1: 8) {
mahalanobis_dist[i, j] <- mahalanobis(grades[i, ], grades[j, ], cov_grades)
}
}
mahalanobis_dist <- mahalanobis(grades, means_grades, cov_grades)
mahalanobis_dist
mahalanobis_dist <- matrix(0, 8, 8)
for(i in 1: 8) {
for(j in 1: 8) {
mahalanobis_dist[i, j] <- mahalanobis(as.numeric(grades[i, ]), as.numeric(grades[j, ]), cov_grades)
}
}
mahalanobis_dist
mahalanobis_dist <- matrix(0, 8, 8)
for(i in 1: 8) {
for(j in 1: 8) {
mahalanobis_dist[i, j] <- mahalanobis(as.numeric(grades[i, ]), as.numeric(grades[j, ]), cov_grades)
}
}
mahalanobis_dist
mahalanobis_dist <- matrix(0, 8, 8)
for(i in 1: 8) {
for(j in 1: 8) {
mahalanobis_dist[i, j] <- mahalanobis(as.numeric(grades[i, ]), as.numeric(grades[j, ]), cov_grades)
}
}
rownames(mahalanobis_dist) <- students$Student
colnames(mahalanobis_dist) <- students$Student
mahalanobis_dist
euclidean_dist <- dist(grades, method="euclidean")
rownames(euclidean_dist) <- students$Student
euclidean_dist <- as.matrix(dist(grades, method="euclidean"))
rownames(euclidean_dist) <- students$Student
colnames(euclidean_dist) <- students$Student
round(euclidean_dist,4)
apply(grades, 1,
function(x) mahalanobis(x, center_mean, cov_grades)
)
apply(grades, 1,
function(x) mahalanobis(x, means_grades, cov_grades)
)
apply(
grades,
1,
function(x) sqrt(sum((x - means_grades)^2))
)
apply(grades, 1,
function(x) mahalanobis(x, means_grades, cov_grades)
)
apply(
grades,
1,
function(x) sqrt(sum((x - means_grades)^2))
)
mahalanobis(grades, means_grades, cov_grades)
mahalanobis(grades, means_grades, cov_grades)
apply(
grades,
1,
function(x) sqrt(sum((x - means_grades)^2))
)
mahalanobis(grades, means_grades, cov_grades)
sqrt(rowSums((grades - center_mean)^2))
mahalanobis(grades, means_grades, cov_grades)
sqrt(rowSums((grades - means_grades)^2))
mahalanobis(grades, means_grades, cov_grades)
sqrt(rowSums((grades - means_grades)^2))
mahalanobis(grades, means_grades, cov_grades)
sqrt(rowSums((grades - means_grades)^2))
apply(
grades,
1,
function(x) sqrt(sum((x - means_grades)^2))
)
mahalanobis(grades, means_grades, cov_grades)
sqrt(rowSums((grades - means_grades)^2))
apply(
as.matrix(grades),
1,
function(x) sqrt(sum((x - means_grades)^2))
)
sqrt(rowSums((grades - means_grades)^2))
mahalanobis(grades, means_grades, cov_grades)
sqrt(rowSums((grades - means_grades)^2))
apply(
as.matrix(grades),
1,
function(x) sqrt(sum((x - means_grades)^2))
)
mahalanobis(grades, means_grades, cov_grades)
sqrt(rowSums((grades - means_grades)^2))
apply(
as.matrix(grades),
1,
function(x) sqrt(sum((x - colMeans(as.matrix(grades)))^2))
)
grades
as.matrix(grades)
sqrt(rowSums((grades - means_grades)^2))
grades_mat <- as.matrix(grades)  # Safely convert to numeric matrix
means_grades <- colMeans(grades_mat)
apply(
grades_mat,
1,
function(x) sqrt(sum((x - means_grades)^2))
)
grades_mat <- as.matrix(grades)
str(grades_mat)
means_grades <- colMeans(grades_mat)
str(means_grades)
mahalanobis(grades, means_grades, cov_grades)
sqrt(rowSums((grades - means_grades)^2))
apply(students[, 2:4], 1, function(x) {
sqrt(sum((x - centroid)^2))
})
mahalanobis(grades, means_grades, cov_grades)
sqrt(rowSums((grades - means_grades)^2))
apply(students[, 2:4], 1, function(x) {
sqrt(sum((x - means_grades)^2))
})
mahalanobis(grades, means_grades, cov_grades)
apply(grades, 1, function(x) {
sqrt(sum((x - means_grades)^2))
})
# euclidean_dist <- as.matrix(dist(grades, method="euclidean"))
euclidean_dist <- apply(grades, 1, function(x) {
sqrt(sum((x - means_grades)^2))
})
# rownames(euclidean_dist) <- students$Student
colnames(euclidean_dist) <- students$Student
# euclidean_dist <- as.matrix(dist(grades, method="euclidean"))
euclidean_dist <- as.matrixapply(grades, 1, function(x) {
sqrt(sum((x - means_grades)^2))
}))
# euclidean_dist <- as.matrix(dist(grades, method="euclidean"))
euclidean_dist <- as.matrix(apply(grades, 1, function(x) {
sqrt(sum((x - means_grades)^2))
}))
# rownames(euclidean_dist) <- students$Student
colnames(euclidean_dist) <- students$Student
# euclidean_dist <- as.matrix(dist(grades, method="euclidean"))
euclidean_dist <- apply(grades, 1, function(x) {
sqrt(sum((x - means_grades)^2))
})
# rownames(euclidean_dist) <- students$Student
names(euclidean_dist) <- students$Student
round(euclidean_dist, 4)
# mahalanobis_matrix <- matrix(0, 8, 8)
#
# for(i in 1: 8) {
#   for(j in 1: 8) {
#     mahalanobis_matrix[i, j] <- mahalanobis(as.numeric(grades[i, ]), as.numeric(grades[j, ]), cov_grades)
#   }
# }
# rownames(mahalanobis_matrix) <- students$Student
# colnames(mahalanobis_matrix) <- students$Student
# mahalanobis_matrix
mahalanobis_dist <- mahalanobis(grades, means_grades, cov_grades)
names(mahalanobis_dist) <- students$Student
round(mahalanobis_dist, 4)
mardia(grades)
mardia(grades)
mardia(dims)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(ggplot2)
library(tidyverse)
library(dplyr)
library(readr)
library(forecast)
library(summarytools)
library(MVN)
})
Student <- c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8")
Math <- c(85, 88, 76, 90, 82,75,95, 80)
English <- c(78, 82, 74, 88, 79, 72, 90, 77)
Science <- c(92, 85, 80, 94, 86, 78, 98, 84)
students <- data.frame(Student, Math, English, Science)
students
summary(grades)
grades <- students[,2:4]
means_grades <- colMeans(grades)
means_grades
cov_grades <-cov(grades)
cov_grades
cor(grades)
pairs(grades)
# euclidean_dist <- as.matrix(dist(grades, method="euclidean"))
euclidean_dist <- apply(grades, 1, function(x) {
sqrt(sum((x - means_grades)^2))
})
# rownames(euclidean_dist) <- students$Student
names(euclidean_dist) <- students$Student
round(euclidean_dist, 4)
# mahalanobis_matrix <- matrix(0, 8, 8)
#
# for(i in 1: 8) {
#   for(j in 1: 8) {
#     mahalanobis_matrix[i, j] <- mahalanobis(as.numeric(grades[i, ]), as.numeric(grades[j, ]), cov_grades)
#   }
# }
# rownames(mahalanobis_matrix) <- students$Student
# colnames(mahalanobis_matrix) <- students$Student
# mahalanobis_matrix
mahalanobis_dist <- mahalanobis(grades, means_grades, cov_grades)
names(mahalanobis_dist) <- students$Student
round(mahalanobis_dist, 4)
mardia(grades)
multivariate_diagnostic_plot(grades, type="qq")
grades$MathSci <- 0.5*grades$Math + 0.5*grades$Science
grades$MathSci
data.frame(
Mean = mean(grades$MathSci),
Var = var(grades$MathSci),
Cor_with_Eng = cor(grades$MathSci, grades$English)
)
Plant <-  c("P1", "P2", "P3", "P4", "P5", "P6", "P7", "P8")
Height <- c(25, 28, 22, 30, 24, 27, 29, 23)
LeafLength <- c(10,12,9, 14, 11, 13, 15, 10)
LeafWidth <- c(4, 5, 3, 6, 4, 5, 6, 3)
plant <- data.frame(Plant, Height, LeafLength, LeafWidth)
plant
summary(plant)
dims <- plant[,2:4]
means_plant <- colMeans(dims)
means_plant
cov_dims <- cov(dims)
cov_dims
cor(dims)
pairs(dims)
euclidean_dist <- dist(dims, method="euclidean")
as.matrix(round(euclidean_dist,4))
mahalanobis_dist <- mahalanobis(dims, means_plant, cov_dims)
mahalanobis_dist
mardia(dims)
mardia(dims, plot = FALSE)
multivariate_diagnostic_plot(dims, type="qq")
suppressPackageStartupMessages({
library(ggplot2)
library(tidyverse)
library(dplyr)
library(readr)
library(forecast)
library(summarytools)
library(psych)
})
suppressPackageStartupMessages({
library(ggplot2)
library(tidyverse)
library(dplyr)
library(readr)
library(forecast)
library(psych)
})
mardia(grades)
psych::mardia(grades)
mvn(data = grades, mvnTest = "mardia")
mvn(data = grades, mvnTest = "mardia")
mvn(data = grades, mvnTest = "mardia")
mvn(data = grades)
mvn(data = grades)$multivariateNormality
psych::mardia(grades)
grades
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(ggplot2)
library(tidyverse)
library(dplyr)
library(readr)
library(forecast)
library(psych)
})
Student <- c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8")
Math <- c(85, 88, 76, 90, 82,75,95, 80)
English <- c(78, 82, 74, 88, 79, 72, 90, 77)
Science <- c(92, 85, 80, 94, 86, 78, 98, 84)
students <- data.frame(Student, Math, English, Science)
students
summary(grades)
grades <- students[,2:4]
means_grades <- colMeans(grades)
means_grades
cov_grades <-cov(grades)
cov_grades
cor(grades)
pairs(grades)
# euclidean_dist <- as.matrix(dist(grades, method="euclidean"))
euclidean_dist <- apply(grades, 1, function(x) {
sqrt(sum((x - means_grades)^2))
})
# rownames(euclidean_dist) <- students$Student
names(euclidean_dist) <- students$Student
round(euclidean_dist, 4)
# mahalanobis_matrix <- matrix(0, 8, 8)
#
# for(i in 1: 8) {
#   for(j in 1: 8) {
#     mahalanobis_matrix[i, j] <- mahalanobis(as.numeric(grades[i, ]), as.numeric(grades[j, ]), cov_grades)
#   }
# }
# rownames(mahalanobis_matrix) <- students$Student
# colnames(mahalanobis_matrix) <- students$Student
# mahalanobis_matrix
mahalanobis_dist <- mahalanobis(grades, means_grades, cov_grades)
names(mahalanobis_dist) <- students$Student
round(mahalanobis_dist, 4)
```{r}
psych::mardia(grades)
psych::mardia()?
```
?psych::mardia()
psych::mardia(dims)
psych::mardia(grades, plot = FALSE)
psych::mardia(grades, plot = FALSE)
psych::mardia(grades, plot = FALSE)
mardia(grades)$plot
eme<-mardia(grades)
eme<- mardia(grades)
psych::mardia(grades, plot = FALSE)
mvv(grades)
mvn(grades)
mvn(grades)$multivariate_normality
mvn(data = grades, mvnTest = "mardia")
library(MVN)
mvn(grades, mvnTest = "hz", multivariatePlot = "qq")
MVN::mardia(grades)
MVN::hz(grades)
MVN::mardia(grades)
MVN::hz(grades)
grades$MathSci <- 0.5*grades$Math + 0.5*grades$Science
grades$MathSci
data.frame(
Mean = mean(grades$MathSci),
Var = var(grades$MathSci),
Cor_with_Eng = cor(grades$MathSci, grades$English)
)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(ggplot2)
library(tidyverse)
library(dplyr)
library(readr)
library(forecast)
library(MVN)
})
Student <- c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8")
Math <- c(85, 88, 76, 90, 82,75,95, 80)
English <- c(78, 82, 74, 88, 79, 72, 90, 77)
Science <- c(92, 85, 80, 94, 86, 78, 98, 84)
students <- data.frame(Student, Math, English, Science)
students
summary(grades)
grades <- students[,2:4]
means_grades <- colMeans(grades)
means_grades
cov_grades <-cov(grades)
cov_grades
cor(grades)
pairs(grades)
# euclidean_dist <- as.matrix(dist(grades, method="euclidean"))
euclidean_dist <- apply(grades, 1, function(x) {
sqrt(sum((x - means_grades)^2))
})
# rownames(euclidean_dist) <- students$Student
names(euclidean_dist) <- students$Student
round(euclidean_dist, 4)
# mahalanobis_matrix <- matrix(0, 8, 8)
#
# for(i in 1: 8) {
#   for(j in 1: 8) {
#     mahalanobis_matrix[i, j] <- mahalanobis(as.numeric(grades[i, ]), as.numeric(grades[j, ]), cov_grades)
#   }
# }
# rownames(mahalanobis_matrix) <- students$Student
# colnames(mahalanobis_matrix) <- students$Student
# mahalanobis_matrix
mahalanobis_dist <- mahalanobis(grades, means_grades, cov_grades)
names(mahalanobis_dist) <- students$Student
round(mahalanobis_dist, 4)
MVN::mardia(grades)
MVN::hz(grades)
multivariate_diagnostic_plot(grades, type="qq")
grades$MathSci <- 0.5*grades$Math + 0.5*grades$Science
grades$MathSci
data.frame(
Mean = mean(grades$MathSci),
Var = var(grades$MathSci),
Cor_with_Eng = cor(grades$MathSci, grades$English)
)
Plant <-  c("P1", "P2", "P3", "P4", "P5", "P6", "P7", "P8")
Height <- c(25, 28, 22, 30, 24, 27, 29, 23)
LeafLength <- c(10,12,9, 14, 11, 13, 15, 10)
LeafWidth <- c(4, 5, 3, 6, 4, 5, 6, 3)
plant <- data.frame(Plant, Height, LeafLength, LeafWidth)
plant
summary(plant)
dims <- plant[,2:4]
means_plant <- colMeans(dims)
means_plant
cov_dims <- cov(dims)
cov_dims
cor(dims)
pairs(dims)
# euclidean_dist <- dist(dims, method="euclidean")
# as.matrix(round(euclidean_dist,4))
euclidean_dist <- apply(dims, 1, function(x) {
sqrt(sum((x - means_plant)^2))
})
# rownames(euclidean_dist) <- students$Student
names(euclidean_dist) <- plant$Plant
round(euclidean_dist, 4)
mahalanobis_dist <- mahalanobis(dims, means_plant, cov_dims)
names(mahalanobis_dist) <- students$Student
round(mahalanobis_dist, 4)
mahalanobis_dist <- mahalanobis(dims, means_plant, cov_dims)
names(mahalanobis_dist) <- plant$Plant
round(mahalanobis_dist, 4)
mardia(dims)
MVN::mardia(dims)
MVN::hz(dims)
multivariate_diagnostic_plot(dims, type="qq")
dims$WidLen <- 0.5*dims$LeafWidth + 0.5*dims$LeafLength
dims$WidLen
data.frame(
Mean = mean(dims$WidLen),
Var = var(dims$WidLen),
Cor_with_Height = cor(dims$WidLen, dims$Height)
)
# euclidean_dist <- as.matrix(dist(grades, method="euclidean"))
euclidean_dist_student <- apply(grades, 1, function(x) {
sqrt(sum((x - means_grades)^2))
})
# rownames(euclidean_dist) <- students$Student
names(euclidean_dist_student) <- students$Student
round(euclidean_dist_student, 4)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(ggplot2)
library(tidyverse)
library(dplyr)
library(readr)
library(forecast)
library(MVN)
})
Student <- c("S1", "S2", "S3", "S4", "S5", "S6", "S7", "S8")
Math <- c(85, 88, 76, 90, 82,75,95, 80)
English <- c(78, 82, 74, 88, 79, 72, 90, 77)
Science <- c(92, 85, 80, 94, 86, 78, 98, 84)
students <- data.frame(Student, Math, English, Science)
students
summary(grades)
grades <- students[,2:4]
means_grades <- colMeans(grades)
means_grades
cov_grades <-cov(grades)
cov_grades
cor(grades)
pairs(grades)
# euclidean_dist <- as.matrix(dist(grades, method="euclidean"))
euclidean_dist_student <- apply(grades, 1, function(x) {
sqrt(sum((x - means_grades)^2))
})
# rownames(euclidean_dist) <- students$Student
names(euclidean_dist_student) <- students$Student
round(euclidean_dist_student, 4)
# mahalanobis_matrix <- matrix(0, 8, 8)
#
# for(i in 1: 8) {
#   for(j in 1: 8) {
#     mahalanobis_matrix[i, j] <- mahalanobis(as.numeric(grades[i, ]), as.numeric(grades[j, ]), cov_grades)
#   }
# }
# rownames(mahalanobis_matrix) <- students$Student
# colnames(mahalanobis_matrix) <- students$Student
# mahalanobis_matrix
mahalanobis_dist_student <- mahalanobis(grades, means_grades, cov_grades)
names(mahalanobis_dist_student) <- students$Student
round(mahalanobis_dist_student, 4)
Plant <-  c("P1", "P2", "P3", "P4", "P5", "P6", "P7", "P8")
Height <- c(25, 28, 22, 30, 24, 27, 29, 23)
LeafLength <- c(10,12,9, 14, 11, 13, 15, 10)
LeafWidth <- c(4, 5, 3, 6, 4, 5, 6, 3)
plant <- data.frame(Plant, Height, LeafLength, LeafWidth)
plant
summary(plant)
dims <- plant[,2:4]
means_plant <- colMeans(dims)
means_plant
cov_dims <- cov(dims)
cov_dims
# euclidean_dist <- dist(dims, method="euclidean")
# as.matrix(round(euclidean_dist,4))
euclidean_dist_plant <- apply(dims, 1, function(x) {
sqrt(sum((x - means_plant)^2))
})
# rownames(euclidean_dist) <- students$Student
names(euclidean_dist_plant) <- plant$Plant
round(euclidean_dist_plant, 4)
mahalanobis_dist_plant <- mahalanobis(dims, means_plant, cov_dims)
names(mahalanobis_dist) <- plant$Plant
round(mahalanobis_dist, 4)
mahalanobis_dist_plant <- mahalanobis(dims, means_plant, cov_dims)
names(mahalanobis_dist_plant) <- plant$Plant
round(mahalanobis_dist_plant, 4)
